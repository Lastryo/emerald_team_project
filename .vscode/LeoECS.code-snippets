{
  // Place your bogatyr workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:

  "UnityComponent": {
    "scope": "csharp",
    "prefix": "UnityComponent",
    "body": [
      "using UnityEngine;\n",
      "namespace Client",
      "{",
      "    public class $TM_FILENAME_BASE : MonoBehaviour { }",
      "}"
    ],
    "description": "Create UnityComponent"
  },

  "LeoECSComponent": {
    "scope": "csharp",
    "prefix": "LeoECSComponent",
    "body": [
      "using Sirenix.OdinInspector;",
      "using Leopotam.Ecs;\n",
      "namespace Client",
      "{",
      "    struct $TM_FILENAME_BASE : IComponent",
      "    {",
      "#if UNITY_EDITOR",
      "        [ShowInInspector]",
      "        public string Doc => \"Компонент который отвечает за...\";",
      "#endif",
      "        public void SetOwner(ref EcsEntity entity, out IComponent component)",
      "        {",
      "            component = entity.Get<$TM_FILENAME_BASE>() = this;",
      "        }",
      "    }",
      "}"
    ],
    "description": "Create LeoECSComponent"
  },
  "InitLeoECSSystem": {
    "scope": "csharp",
    "prefix": "InitLeoECSSystem",
    "body": [
      "using Leopotam.Ecs;\n",
      "namespace Client",
      "{",
      "    sealed class $TM_FILENAME_BASE : IEcsInitSystem",
      "    {",
      "        readonly EcsWorld _world = null;",
      "        public void Init()",
      "        {\n",

      "        }",
      "    }\n",
      "}"
    ],
    "description": "Create InitLeoECSSystem"
  },
  "RunLeoECSSystem": {
    "scope": "csharp",
    "prefix": "RunLeoECSSystem",
    "body": [
      "using Leopotam.Ecs;\n",
      "namespace Client",
      "{",
      "    sealed class $TM_FILENAME_BASE : IEcsRunSystem",
      "    {",
      "        readonly EcsWorld _world = null;\n",
      "        public void Run()",
      "        {\n",

      "        }",
      "    }\n",
      "}"
    ],
    "description": "Create RunLeoECSSystem"
  },
  "LeoECSEvent": {
    "scope": "csharp",
    "prefix": "LeoECSEvent",
    "body": [
      "namespace Client",
      "{",
      "   public struct $TM_FILENAME_BASE",
      "   {\n",

      "   }",
      "}"
    ],
    "description": "Create LeoECSEvent"
  }
}
